---

- hosts: localhost

  tasks:
    - name: Mount external drive
      ansible.posix.mount:
        path: /mnt/ark01
        src: LABEL=ark01
        fstype: ext4
        state: mounted
      become: true
 
    - name: Create public share user
      user:
        name: pippin
        shell: /sbin/nologin
        create_home: no
      become: true

    - name: Create private share user
      user:
        name: gandalf
        password: $6$zlNYWfOy5dEPyuCZ$MOu8Jk112JILoo5TtxmSLn9JFCxpqOlLW.J//lpInmsG8HuaMiJwbx5zjpm1OQpgZfRQ1mURHNM5Kg/tgHU2p.
        shell: /sbin/nologin
        create_home: no
      become: true

    - name: Create laptop user
      user:
        name: strider
        append: true
        groups: sudo
      become: true

    - name: Create key directory for laptop user
      file:
        path: /home/strider/.ssh
        state: directory
      become: true

    - name: Chown share directories to share users
      file:
        path: "{{ item.dir }}"
        state: directory
        recurse: yes
        owner: "{{ item.usr }}"
        group: "{{ item.grp }}"
      loop:
        - { dir: '/mnt/ark01/share', usr: 'pippin', grp: 'pippin' }
        - { dir: '/mnt/ark01/proxstore', usr: 'gandalf', grp: 'gandalf' }
        - { dir: '/mnt/ark01/archive', usr: 'gandalf', grp: 'gandalf' }
      become: true

    - name: Create dist
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - "{{ dist.home }}"
        - "{{ dist.cats }}"
        - "{{ dist.cert }}"
      become: true

    - name: Change dist ownership
      file:
        path: "{{ dist.home }}"
        state: directory
        recurse: yes
        owner: aragorn
        group: aragorn
      become: true

    - name: Set cronjob - renew certificate
      cron:
        name: "renew certificate"
        minute: 0
        hour: 4
        day: 1
        month: "*/2"
        job: "/home/aragorn/.local/bin/ansible-playbook /repos/serenity/playbooks/cert.yml"

    - name: Set permissions on ansible ssh key
      file:
        path: "{{ ansible_ssh_private_key_file }}"
        state: touch
        mode: 0600
        modification_time: preserve
        access_time: preserve
      become: true

    - name: Install packages
      apt:
        name: 
         - vlan
         - samba
         - sshpass
      become: true

    - name: Disable ssh password authentication
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "{{ item }}"
        line: PasswordAuthentication no
      loop:
        - '^\#PasswordAuthentication*'
        - '^PasswordAuthentication*'
      become: true
      notify: "restart ssh"

    - name: Update vlans config - add vlans for mdns repeater
      copy:
        dest: /etc/network/interfaces.d/vlans
        content: |
          auto eth0.20
          iface eth0.20 inet manual
            vlan-raw-device eth0

          auto eth0.30
          iface eth0.30 inet manual
            vlan-raw-device eth0

          auto eth0.40
          iface eth0.40 inet manual
            vlan-raw-device eth0
      become: true

    - name: Update dhcpcd config - add static addresses
      blockinfile:
        path: /etc/dhcpcd.conf
        block: |
          interface eth0
          static ip_address=192.168.10.20/24
          static routers=192.168.10.1
          static domain_name_servers=192.168.10.100

          interface eth0.20
          static ip_address=192.168.20.5/24
          static routers=192.168.20.1
          static domain_name_servers=192.168.10.100

          interface eth0.30
          static ip_address=192.168.30.5/24
          static routers=192.168.30.1
          static domain_name_servers=192.168.10.100

          interface eth0.40
          static ip_address=192.168.40.5/24
          static routers=192.168.40.1
          static domain_name_servers=192.168.10.100
      become: true

    - name: Create samba user - public share
      shell: "smbpasswd -n -a pippin"
      become: true

    - name: Create samba user - private share
      vars:
        gandalf_pw: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          34643763383962343434383637393637343561633133376466346533373564316533336239386139
          3835386331303734666337313335353263393066623235620a326261623366633062623764396238
          65646634306130353563633631373934323231313666633935326431393236623431663335326636
          6135656663653261660a656635373538316137306338383434653562343838363233356637333337
          6139
      shell: "(echo {{ gandalf_pw }}; echo {{ gandalf_pw }}) | smbpasswd -s -a gandalf"
      become: true

    - name: Update samba config - global settings
      blockinfile:
        path: /etc/samba/smb.conf
        insertafter: '\[global\]'
        marker: "# {mark} ANSIBLE GLOBAL CONFIG"
        block: |
         null passwords = yes
         interfaces = eth0
         bind interfaces only = yes
         netbios aliases = share, archive, proxstore
      notify: "restart samba"
      become: true

    - name: Update samba config - share settings
      blockinfile:
        path: /etc/samba/smb.conf
        marker: "# {mark} ANSIBLE SHARE CONFIG"
        block: |
          [share]
              path = /mnt/ark01/share
              writable = yes
              printable = no
              public = yes
              create mask = 0777
              directory mask = 0777
              force user = pippin
              force group = pippin

          [archive]
              path = /mnt/ark01/archive
              writable = yes
              printable = no
              public = yes
              create mask = 0777
              directory mask = 0777
              valid user = gandalf

          [backups]
              path = /mnt/ark01/proxstore/backups
              writable = yes
              printable = no
              public = yes
              create mask = 0777
              directory mask = 0777
              valid user = gandalf

          [templates]
              path = /mnt/ark01/proxstore/templates
              writable = yes
              printable = no
              public = yes
              create mask = 0777
              directory mask = 0777
              valid user = gandalf
      notify: "restart samba"
      become: true

    - name: Update avahi config - enable mdns reflector
      lineinfile:
        path: /etc/avahi/avahi-daemon.conf
        regexp: "{{ item }}"
        line: enable-reflector=yes
      notify: "restart avahi"
      loop:
       - '^\#enable-reflector=*'
       - '^enable-reflector=*'
      become: true

  handlers:
    - name: restart samba
      systemd:
        state: restarted
        name: smbd
      become: true

    - name: restart avahi
      systemd:
        state: restarted
        name: avahi-daemon
      become: true

    - name: restart ssh
      systemd:
        state: restarted
        name: sshd
      become: true